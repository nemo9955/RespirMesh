// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mesh-packet.proto

/*
Package rem is a generated protocol buffer package.

It is generated from these files:
	mesh-packet.proto

It has these top-level messages:
	RespirMeshInfo
	RespirMeshTimeSync
*/
package rem

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ForwardingType int32

const (
	ForwardingType_TO_ROOT           ForwardingType = 0
	ForwardingType_RTN_HEADER_QUEUE  ForwardingType = 1
	ForwardingType_PARENT_TO_ROOT    ForwardingType = 3
	ForwardingType_NEIGHBOR_STOP     ForwardingType = 10
	ForwardingType_NEIGHBOR_TO_ROOT  ForwardingType = 11
	ForwardingType_NEIGHBOR_AND_BACK ForwardingType = 12
	ForwardingType_PARENT_AND_BACK   ForwardingType = 22
)

var ForwardingType_name = map[int32]string{
	0:  "TO_ROOT",
	1:  "RTN_HEADER_QUEUE",
	3:  "PARENT_TO_ROOT",
	10: "NEIGHBOR_STOP",
	11: "NEIGHBOR_TO_ROOT",
	12: "NEIGHBOR_AND_BACK",
	22: "PARENT_AND_BACK",
}
var ForwardingType_value = map[string]int32{
	"TO_ROOT":           0,
	"RTN_HEADER_QUEUE":  1,
	"PARENT_TO_ROOT":    3,
	"NEIGHBOR_STOP":     10,
	"NEIGHBOR_TO_ROOT":  11,
	"NEIGHBOR_AND_BACK": 12,
	"PARENT_AND_BACK":   22,
}

func (x ForwardingType) String() string {
	return proto.EnumName(ForwardingType_name, int32(x))
}
func (ForwardingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type HeaderType int32

const (
	HeaderType_BASIC                  HeaderType = 0
	HeaderType_LITTLE_BIG_ENDIAN_SYNC HeaderType = 15
)

var HeaderType_name = map[int32]string{
	0:  "BASIC",
	15: "LITTLE_BIG_ENDIAN_SYNC",
}
var HeaderType_value = map[string]int32{
	"BASIC":                  0,
	"LITTLE_BIG_ENDIAN_SYNC": 15,
}

func (x HeaderType) String() string {
	return proto.EnumName(HeaderType_name, int32(x))
}
func (HeaderType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ProtobufType int32

const (
	ProtobufType_NO_PROTOBUF            ProtobufType = 0
	ProtobufType_PING                   ProtobufType = 1
	ProtobufType_TIMESYNC               ProtobufType = 2
	ProtobufType_PONG                   ProtobufType = 3
	ProtobufType_MESH_TOPOLOGY          ProtobufType = 4
	ProtobufType_INFO                   ProtobufType = 5
	ProtobufType_SYNC_LITTLE_BIG_ENDIAN ProtobufType = 15
)

var ProtobufType_name = map[int32]string{
	0:  "NO_PROTOBUF",
	1:  "PING",
	2:  "TIMESYNC",
	3:  "PONG",
	4:  "MESH_TOPOLOGY",
	5:  "INFO",
	15: "SYNC_LITTLE_BIG_ENDIAN",
}
var ProtobufType_value = map[string]int32{
	"NO_PROTOBUF":   0,
	"PING":          1,
	"TIMESYNC":      2,
	"PONG":          3,
	"MESH_TOPOLOGY": 4,
	"INFO":          5,
	"SYNC_LITTLE_BIG_ENDIAN": 15,
}

func (x ProtobufType) String() string {
	return proto.EnumName(ProtobufType_name, int32(x))
}
func (ProtobufType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type RespirMeshInfo struct {
	TargetId uint32       `protobuf:"varint,1,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	SourceId uint32       `protobuf:"varint,2,opt,name=source_id,json=sourceId" json:"source_id,omitempty"`
	Type     ProtobufType `protobuf:"varint,3,opt,name=type,enum=ProtobufType" json:"type,omitempty"`
}

func (m *RespirMeshInfo) Reset()                    { *m = RespirMeshInfo{} }
func (m *RespirMeshInfo) String() string            { return proto.CompactTextString(m) }
func (*RespirMeshInfo) ProtoMessage()               {}
func (*RespirMeshInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RespirMeshInfo) GetTargetId() uint32 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *RespirMeshInfo) GetSourceId() uint32 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *RespirMeshInfo) GetType() ProtobufType {
	if m != nil {
		return m.Type
	}
	return ProtobufType_NO_PROTOBUF
}

type RespirMeshTimeSync struct {
	Info                *RespirMeshInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	RequestSentTime     uint32          `protobuf:"varint,2,opt,name=request_sent_time,json=requestSentTime" json:"request_sent_time,omitempty"`
	ResponseArriveTime  uint32          `protobuf:"varint,3,opt,name=response_arrive_time,json=responseArriveTime" json:"response_arrive_time,omitempty"`
	ResponseSentTime    uint32          `protobuf:"varint,4,opt,name=response_sent_time,json=responseSentTime" json:"response_sent_time,omitempty"`
	RequestArriveTime   uint32          `protobuf:"varint,5,opt,name=request_arrive_time,json=requestArriveTime" json:"request_arrive_time,omitempty"`
	ServerTimestampUnix uint32          `protobuf:"varint,6,opt,name=server_timestamp_unix,json=serverTimestampUnix" json:"server_timestamp_unix,omitempty"`
}

func (m *RespirMeshTimeSync) Reset()                    { *m = RespirMeshTimeSync{} }
func (m *RespirMeshTimeSync) String() string            { return proto.CompactTextString(m) }
func (*RespirMeshTimeSync) ProtoMessage()               {}
func (*RespirMeshTimeSync) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RespirMeshTimeSync) GetInfo() *RespirMeshInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *RespirMeshTimeSync) GetRequestSentTime() uint32 {
	if m != nil {
		return m.RequestSentTime
	}
	return 0
}

func (m *RespirMeshTimeSync) GetResponseArriveTime() uint32 {
	if m != nil {
		return m.ResponseArriveTime
	}
	return 0
}

func (m *RespirMeshTimeSync) GetResponseSentTime() uint32 {
	if m != nil {
		return m.ResponseSentTime
	}
	return 0
}

func (m *RespirMeshTimeSync) GetRequestArriveTime() uint32 {
	if m != nil {
		return m.RequestArriveTime
	}
	return 0
}

func (m *RespirMeshTimeSync) GetServerTimestampUnix() uint32 {
	if m != nil {
		return m.ServerTimestampUnix
	}
	return 0
}

func init() {
	proto.RegisterType((*RespirMeshInfo)(nil), "RespirMeshInfo")
	proto.RegisterType((*RespirMeshTimeSync)(nil), "RespirMeshTimeSync")
	proto.RegisterEnum("ForwardingType", ForwardingType_name, ForwardingType_value)
	proto.RegisterEnum("HeaderType", HeaderType_name, HeaderType_value)
	proto.RegisterEnum("ProtobufType", ProtobufType_name, ProtobufType_value)
}

func init() { proto.RegisterFile("mesh-packet.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 503 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x92, 0xcb, 0x6e, 0xda, 0x4c,
	0x1c, 0xc5, 0x63, 0x2e, 0xf9, 0xc8, 0x9f, 0x8b, 0x87, 0x21, 0x89, 0xd0, 0xd7, 0x4d, 0x9a, 0x6e,
	0x22, 0xd4, 0xa2, 0x8a, 0x3c, 0x81, 0x0d, 0x06, 0xac, 0xc2, 0x8c, 0x6b, 0x0f, 0x8b, 0x74, 0x33,
	0x72, 0x60, 0x48, 0xac, 0xca, 0x97, 0x8e, 0x4d, 0x1a, 0xfa, 0x2c, 0x7d, 0x81, 0xbe, 0x65, 0xe5,
	0x31, 0xa6, 0x54, 0xdd, 0x9e, 0xdf, 0x39, 0xe7, 0x7f, 0x6c, 0x0d, 0x74, 0x43, 0x91, 0x3e, 0x7f,
	0x48, 0xfc, 0xf5, 0x57, 0x91, 0x0d, 0x13, 0x19, 0x67, 0xf1, 0x6d, 0x08, 0x1d, 0x57, 0xa4, 0x49,
	0x20, 0x97, 0x22, 0x7d, 0xb6, 0xa3, 0x6d, 0x8c, 0xdf, 0xc0, 0x45, 0xe6, 0xcb, 0x27, 0x91, 0xf1,
	0x60, 0xd3, 0xd7, 0x6e, 0xb4, 0xbb, 0xb6, 0xdb, 0x28, 0x04, 0x7b, 0x93, 0xc3, 0x34, 0xde, 0xc9,
	0xb5, 0xc8, 0x61, 0xa5, 0x80, 0x85, 0x60, 0x6f, 0xf0, 0x5b, 0xa8, 0x65, 0xfb, 0x44, 0xf4, 0xab,
	0x37, 0xda, 0x5d, 0x67, 0xd4, 0x1e, 0x3a, 0xf9, 0x85, 0xc7, 0xdd, 0x96, 0xed, 0x13, 0xe1, 0x2a,
	0x74, 0xfb, 0xab, 0x02, 0xf8, 0xcf, 0x3d, 0x16, 0x84, 0xc2, 0xdb, 0x47, 0x6b, 0xfc, 0x0e, 0x6a,
	0x41, 0xb4, 0x8d, 0xd5, 0xb9, 0xe6, 0x48, 0x1f, 0xfe, 0x3d, 0xc9, 0x55, 0x10, 0x0f, 0xa0, 0x2b,
	0xc5, 0xb7, 0x9d, 0x48, 0x33, 0x9e, 0x8a, 0x28, 0xe3, 0x59, 0x10, 0x8a, 0xc3, 0x06, 0xfd, 0x00,
	0x3c, 0x11, 0x65, 0x79, 0x29, 0xfe, 0x08, 0x97, 0x52, 0xa4, 0x49, 0x1c, 0xa5, 0x82, 0xfb, 0x52,
	0x06, 0x2f, 0xa2, 0xb0, 0x57, 0x95, 0x1d, 0x97, 0xcc, 0x50, 0x48, 0x25, 0xde, 0xc3, 0x51, 0x3d,
	0xa9, 0xaf, 0x29, 0x3f, 0x2a, 0xc9, 0xb1, 0x7f, 0x08, 0xbd, 0x72, 0xcb, 0x69, 0x7d, 0x5d, 0xd9,
	0xcb, 0x99, 0x27, 0xed, 0x23, 0xb8, 0x4a, 0x85, 0x7c, 0x11, 0x52, 0xf9, 0xd2, 0xcc, 0x0f, 0x13,
	0xbe, 0x8b, 0x82, 0xd7, 0xfe, 0xb9, 0x4a, 0xf4, 0x0a, 0xc8, 0x4a, 0xb6, 0x8a, 0x82, 0xd7, 0xc1,
	0x4f, 0x0d, 0x3a, 0xd3, 0x58, 0x7e, 0xf7, 0xe5, 0x26, 0x88, 0x9e, 0xf2, 0x9f, 0x88, 0x9b, 0xf0,
	0x1f, 0xa3, 0xdc, 0xa5, 0x94, 0xa1, 0x33, 0x7c, 0x09, 0xc8, 0x65, 0x84, 0xcf, 0x2d, 0x63, 0x62,
	0xb9, 0xfc, 0xf3, 0xca, 0x5a, 0x59, 0x48, 0xc3, 0x18, 0x3a, 0x8e, 0xe1, 0x5a, 0x84, 0xf1, 0xd2,
	0x59, 0xc5, 0x5d, 0x68, 0x13, 0xcb, 0x9e, 0xcd, 0x4d, 0xea, 0x72, 0x8f, 0x51, 0x07, 0x41, 0x1e,
	0x3e, 0x4a, 0xa5, 0xb1, 0x89, 0xaf, 0xa0, 0x7b, 0x54, 0x0d, 0x32, 0xe1, 0xa6, 0x31, 0xfe, 0x84,
	0x5a, 0xb8, 0x07, 0xfa, 0xa1, 0xf3, 0x28, 0x5e, 0x0f, 0xee, 0x01, 0xe6, 0xc2, 0xdf, 0x08, 0xa9,
	0x96, 0x5d, 0x40, 0xdd, 0x34, 0x3c, 0x7b, 0x8c, 0xce, 0xf0, 0xff, 0x70, 0xbd, 0xb0, 0x19, 0x5b,
	0x58, 0xdc, 0xb4, 0x67, 0xdc, 0x22, 0x13, 0xdb, 0x20, 0xdc, 0x7b, 0x20, 0x63, 0xa4, 0x0f, 0x7e,
	0x40, 0xeb, 0xf4, 0x55, 0x60, 0x1d, 0x9a, 0x84, 0x72, 0xc7, 0xa5, 0x8c, 0x9a, 0xab, 0x29, 0x3a,
	0xc3, 0x0d, 0xa8, 0x39, 0x36, 0x99, 0x21, 0x0d, 0xb7, 0xa0, 0xc1, 0xec, 0xa5, 0xa5, 0x82, 0x15,
	0xa5, 0x53, 0x32, 0x2b, 0x3e, 0x66, 0x69, 0x79, 0x73, 0xce, 0xa8, 0x43, 0x17, 0x74, 0xf6, 0x80,
	0x6a, 0x39, 0xb4, 0xc9, 0x94, 0xa2, 0x7a, 0x7e, 0x3b, 0x0f, 0xf0, 0x7f, 0x06, 0x20, 0xdd, 0xac,
	0x7f, 0xa9, 0x4a, 0x11, 0x3e, 0x9e, 0xab, 0x87, 0x7f, 0xff, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x6a,
	0x88, 0x4e, 0x4c, 0x0d, 0x03, 0x00, 0x00,
}
